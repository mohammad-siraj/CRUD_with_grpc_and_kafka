version: '3.7'
services:
  postgres:
    image: postgres:13-alpine
    container_name: postgresql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: root
      PGDATA: /data/postgres
    volumes:
      - ./data/postgres/data:/var/lib/postgresql/data
    networks:
      - indexer_avalanche_network

  zookeeper:
    image: confluentinc/cp-zookeeper:5.2.1
    restart: always
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
    ports:
      - "2181:2181"
    volumes:
      - ./data/zookeeper/data:/var/lib/zookeeper/data
      - ./data/zookeeper/datalog:/var/lib/zookeeper/datalog
    networks:
      - indexer_avalanche_network

  kafka1:
    image: confluentinc/cp-kafka:latest
    restart: always
    container_name: kafka1
    ports:
      - "9091:9091"
    links:
      - zookeeper:zk
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:19091,PLAINTEXT_HOST://localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./data/kafka1/data:/var/lib/kafka1/data
    networks:
      - indexer_avalanche_network

  kafka2:
    image: confluentinc/cp-kafka:latest
    restart: always
    container_name: kafka2
    ports:
      - "9092:9092"
    links:
      - zookeeper:zk
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:19092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./data/kafka2/data:/var/lib/kafka2/data
    networks:
      - indexer_avalanche_network

  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:19091"
    depends_on:
      - kafka1
      - kafka2
    networks:
      - indexer_avalanche_network

  kowl:
    image: quay.io/cloudhut/kowl:master
    container_name: kowl
    restart: "no"
    depends_on:
      - kafka1
      - kafka2
    ports:
      - "8080:8080"
    environment:
      KAFKA_BROKERS: "kafka1:19091"
      KAFKA_TLS_ENABLED: "false"
    networks:
      - indexer_avalanche_network